{"version":3,"sources":["audio/GummyBearz.mp3","components/dot.png","components/VisualDemo.js","components/Post.js","components/Box.js","components/Blocks.js","components/Number.js","components/Slider.js","components/PullRelease.js","components/Borders.js","components/InstancedSpheres.js","components/Scene.js","components/AudioDataContainer.js","serviceWorker.js","index.js","App.js"],"names":["module","exports","makeStyles","theme","flexContainer","display","flexWrap","justifyContent","paddingTop","Post","useThree","gl","scene","camera","size","smaa","useLoader","SMAAImageLoader","composer","useMemo","EffectComposer","addPass","RenderPass","smaaEffect","SMAAEffect","colorEdgesMaterial","setEdgeDetectionThreshold","normalPass","NormalPass","ssaoEffect","SSAOEffect","renderTarget","texture","blendFunction","BlendFunction","MULTIPLY","samples","rings","distanceThreshold","distanceFalloff","rangeThreshold","rangeFalloff","luminanceInfluence","radius","intensity","bias","blendMode","opacity","value","effectPass","EffectPass","renderToScreen","useEffect","setSize","width","height","useFrame","_","delta","render","Effect","fallback","Box","mouse","scale","viewport","useBox","mass","args","isKinematic","ref","api","position","set","attach","color","transparent","side","THREE","easeInOutCubic","t","Block","props","aspect","factor","Math","random","state","sin","clock","getElapsedTime","music","Blocks","console","log","amplitudeValues","boxes","Array","keys","map","box","length","Number","chars","numeral","number","format","split","className","digit","i","isNaN","key","classname","narrow","includes","from","translateY","pointerEvents","touchAction","to","style","transform","Slider","myJson","songKeys","colorArray","PullRelease","useSpring","x","y","x1","y1","x2","y2","x3","y3","op","background","move","React","useState","pulled","setPulled","setCount","translated","setTranslate","selIndex","setSelIndex","songData","setSongData","songIndex","setSongIndex","bind","useDrag","last","vxvy","movement","mx","my","cancel","canceled","setScale","getStats","colCode","replace","setMainColor","pickItem","flexDirection","alignItems","margin","marginBottom","title","fontSize","music_label","div","item","index","onClick","released","borderRadius","filter","span","borderStyle","borderWidth","borderColor","backgroundColor","Plane","usePlane","receiveShadow","Borders","rotation","PI","InstancedSpheres","count","useSphere","castShadow","normalMap","normalScale","normalMap-wrapS","normalMap-wrapT","normalMap-repeat","Scene","useCallback","clientX","clientY","current","window","innerWidth","innerHeight","useRef","ampValues","setAmpValues","mainColor","adjustFreqBandStyle","newAmplitudeData","runSpectrum","getFrequencyData","requestAnimationFrame","border","padding","initializeAudioAnalyser","aria-label","backgroundBlendMode","concurrent","shadowMap","alpha","antialias","fov","near","far","angle","shadow-mapSize-width","shadow-mapSize-height","shadow-camera-left","shadow-camera-right","shadow-camera-top","shadow-camera-bottom","gravity","AudioDataContainer","audioFile","Audio","audioContext","AudioContext","source","createMediaElementSource","analyser","createAnalyser","src","soundFile","fftSize","connect","destination","play","setState","audioData","styleAdjuster","bufferLength","frequencyBinCount","amplitudeArray","Uint8Array","getByteFrequencyData","frequencyBandArray","this","Component","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.78e63254.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/GummyBearz.977769bf.mp3\";","module.exports = __webpack_public_path__ + \"static/media/dot.48f1f9fe.png\";","import React, { useRef }  from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport { makeStyles } from '@material-ui/core/styles';\nimport '../stylesheets/App.scss';\n\nconst useStyles = makeStyles(theme => ({\n  flexContainer: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    paddingTop: '25%'\n  }\n}));\n\nexport default function VisualDemo(props) {\n\n    const classes = useStyles();\n\n    const amplitudeValues = useRef(null);\n\n    function adjustFreqBandStyle(newAmplitudeData){\n      amplitudeValues.current = newAmplitudeData;\n      let domElements = props.frequencyBandArray.map((num) =>\n        document.getElementById(num))\n      for(let i=0; i<props.frequencyBandArray.length; i++){\n        let num = props.frequencyBandArray[i]\n        domElements[num].style.backgroundColor = `rgb(0, 255, ${amplitudeValues.current[num]})`\n        domElements[num].style.height = `${amplitudeValues.current[num]}px`\n      }\n    };\n\n    function runSpectrum(){\n      props.getFrequencyData(adjustFreqBandStyle)\n      requestAnimationFrame(runSpectrum)\n    }\n\n    function handleStartBottonClick(){\n      props.initializeAudioAnalyser()\n      requestAnimationFrame(runSpectrum)\n    }\n\n    return (\n\n      <div>\n\n        <div>\n          <Tooltip\n            title=\"Start\"\n            aria-label=\"Start\"\n            placement=\"right\">\n            <IconButton\n              id='startButton'\n              onClick={() => handleStartBottonClick()}\n              disabled={!!props.audioData ? true : false}>\n              <EqualizerIcon/>\n            </IconButton>\n          </Tooltip>\n        </div>\n\n        <div className={classes.flexContainer}>\n          {props.frequencyBandArray.map((num) =>\n            <Paper\n              className={'frequencyBands'}\n              elevation={4}\n              id={num}\n              key={num}\n            />\n          )}\n        </div>\n\n      </div>\n\n    );\n\n}\n","import React, { Suspense, useMemo, useEffect } from \"react\"\nimport { useLoader, useThree, useFrame } from \"react-three-fiber\"\nimport {\n  SMAAImageLoader,\n  BlendFunction,\n  EffectComposer,\n  EffectPass,\n  RenderPass,\n  SMAAEffect,\n  SSAOEffect,\n  NormalPass,\n} from \"postprocessing\"\n\nfunction Post() {\n  const { gl, scene, camera, size } = useThree()\n  const smaa = useLoader(SMAAImageLoader)\n  const composer = useMemo(() => {\n    const composer = new EffectComposer(gl)\n    composer.addPass(new RenderPass(scene, camera))\n    const smaaEffect = new SMAAEffect(...smaa)\n    smaaEffect.colorEdgesMaterial.setEdgeDetectionThreshold(0.1)\n\n    const normalPass = new NormalPass(scene, camera)\n    const ssaoEffect = new SSAOEffect(camera, normalPass.renderTarget.texture, {\n      blendFunction: BlendFunction.MULTIPLY,\n      samples: 31, // May get away with less samples\n      rings: 4, // Just make sure this isn't a multiple of samples\n      distanceThreshold: 0.4,\n      distanceFalloff: 0.5,\n      rangeThreshold: 0.5, // Controls sensitivity based on camera view distance **\n      rangeFalloff: 0.01,\n      luminanceInfluence: 0.5,\n      radius: 5, // Spread range\n      intensity: 10,\n      bias: 0.5,\n    })\n\n    // SSAO is supposed to be a subtle effect!\n    ssaoEffect.blendMode.opacity.value = 1.0 // Debug.\n\n    const effectPass = new EffectPass(\n      camera,\n      smaaEffect,\n      ssaoEffect,\n      //new DepthEffect(), // Check if depth looks ok.\n    )\n    effectPass.renderToScreen = true\n    //normalPass.renderToScreen = true // Check if normals look ok.\n    composer.addPass(normalPass)\n    composer.addPass(effectPass)\n    return composer\n  }, [])\n\n  useEffect(() => void composer.setSize(size.width, size.height), [size])\n  return useFrame((_, delta) => composer.render(delta), 1)\n}\n\nexport default function Effect() {\n  return (\n    <Suspense fallback={null}>\n      <Post />\n    </Suspense>\n  )\n}\n","import * as THREE from \"three\";\nimport React, { Suspense, useState, useCallback } from \"react\";\nimport { useFrame, useThree } from \"react-three-fiber\";\nimport {  useBox } from \"use-cannon\";\n\n\nfunction Box({ mouse, scale }) {\n    const { size, viewport } = useThree();\n    const aspect = size.width / viewport.width;\n    const [ref, api] = useBox(() => ({\n      mass: 100,\n      args: [4, 4, 4],\n      isKinematic: true,\n    }));\n  useFrame(() => {\n    \n      api.position.set(- 5 -  (viewport.width / 2 ) + scale / 8, -7, 8)\n     /*  api.position.set(\n      [10,0,5]\n      ); */\n    }); \n    return (\n      <mesh ref={ref} position={[10,-5,5]}>\n        <boxBufferGeometry attach=\"geometry\" args={[4, 4, 4]} />\n        <meshLambertMaterial\n          attach=\"material\"\n          color=\"transparent\"\n          transparent\n          opacity={0}\n      \n          side={THREE.DoubleSide}\n        />\n      </mesh>\n    );\n  }\n\n  export default Box;","import * as THREE from \"three\";\nimport React, { useMemo, Suspense, useState, useCallback } from \"react\";\nimport {  useFrame, useThree} from \"react-three-fiber\";\nimport { useBox } from \"use-cannon\";\n\nconst easeInOutCubic = (t) => (t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1)\n\nfunction Block({ position, color, ...props }) {\n    const { size, viewport } = useThree();\n    const aspect = size.width / viewport.width;\n  \n  \n    const [ref, api] = useBox(() => ({\n      ...props,\n      mass: 1,\n      args: [4, 4, 4],\n      \n    }));\n   \n\n\n    const factor = useMemo(() => 0.5 + Math.random(), [])\n    useFrame((state) => {\n      const t = easeInOutCubic((1 + Math.sin(state.clock.getElapsedTime() * factor)) / 2)\n     // api.position.set(position[0], 1 + t * 3 - 7, position[2] )\n     api.position.set(position[0], props.music ? -14 + props.music / aspect: -15 , position[2])\n    //ref.current.position.y = 1 + t * 3 - 5\n    })\n    return (\n      <mesh ref={ref} position={position} {...props} >\n        <boxBufferGeometry attach=\"geometry\"  args={[0.7, 0.7, 0.7]} />\n        <meshPhongMaterial\n          attach=\"material\"\n          color=\"white\"\n        transparent\n        opacity={0}\n         // side={THREE.DoubleSide}\n        />\n      </mesh>\n    );\n  }\n  \nexport default function Blocks(props) {\n    const { viewport } = useThree();\n  console.log(props.amplitudeValues)\n  let boxes =  [...Array(25).keys()]\n\n    return (\n      <>\n      {boxes.map((box) => \n        <Block position={[(-viewport.width /2) + ( (viewport.width) / boxes.length) * box,-viewport.height / 2 - 10 , 9]} music={props.amplitudeValues ? props.amplitudeValues[box] : null } />\n        )}\n      </>\n    );\n  }","import React, { useState } from \"react\";\n\nimport numeral from \"numeral\";\nimport { Spring } from \"react-spring/renderprops\";\nimport classname from \"classname\";\nimport useInterval from \"./useInterval\";\n\nimport \"./style.css\";\n\nconst initialNumber = 1586.12;\nconst updateInterval = 2000; //ms\n\nfunction updateWithRandomNumber(setCount) {\n  const integerLength = initialNumber.toString().split(\".\")[0].length;\n  const min = 0;\n  const max = 20;\n\n\n\n  let num = Math.random() * max;\n  setCount(num.toFixed(3));\n}\n\nfunction Number(props) {\n // const [number, setCount] = useState(initialNumber);\n\n   function updateVal() {\n    \n       updateWithRandomNumber(props.setCount)\n   }\n\n  const chars = numeral(props.number).format(\"0.00\").split(\"\");\n\n  return (\n    <div className=\"page\">\n      <div className=\"odometer\">\n        {chars.map((digit, i) => {\n          if (isNaN(digit)) {\n            return (\n              <div\n                key={`digit-${i}`}\n                className={classname(\"digit\", {\n                  narrow: [\".\", \",\"].includes(digit)\n                })}\n              >\n                {digit}\n              </div>\n            );\n          }\n\n          return (\n            <Spring\n              key={`digit-${i}`}\n              from={{ translateY: 0, opacity: 0,  pointerEvents: \"none\",\n  \n  touchAction: \"none\", }}\n              to={{ translateY: -digit, opacity: 1, pointerEvents: \"none\",\n  \n  touchAction: \"none\", }}\n\n            >\n              {(props) => (\n                <div className=\"digit\">\n                  <div\n                    style={{\n                      opacity: props.opacity,\n                      transform: `translateY(${props.translateY}em)`\n                    }}\n                  >\n                    0 1 2 3 4 5 6 7 8 9 0\n                  </div>\n                </div>\n              )}\n            </Spring>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Number\n","import React, {useState} from 'react'\nimport './styles.css'\n\nfunction Slider() {\nreturn (\n    <div class=\"slider-container\">\n  <label class=\"switch\" for=\"checkbox\">\n    <input type=\"checkbox\" id=\"checkbox\" />\n    <div class=\"slider round\"></div>\n  </label>\n</div>\n)\n}\n\nexport default Slider;\n\n","import * as THREE from \"three\";\nimport React, { Suspense, useState, useCallback } from \"react\";\nimport { useSprings, useSpring, animated, interpolate } from \"react-spring\";\nimport { useGesture, useDrag } from \"react-use-gesture\";\nimport Number from \"./Number\";\nimport \"./styles.css\";\nimport Slider from \"./Slider\";\nimport myJson from \"./small.json\";\n\nconsole.log(myJson);\n\nconst initialNumber = 156.12;\n\nconst songKeys = [\n  \"instrumentalness\",\n  \"danceability\",\n  \"liveness\",\n  \"loudness\",\n  \"music_key\",\n  \"acousticness\",\n  \"music_mode\",\n  \"tempo\",\n  \"time_signature\",\n];\n\nvar colorArray = [\n  \"#FF6633\",\n  \"#FFB399\",\n  \"#FF33FF\",\n  \"#FFFF99\",\n  \"#00B3E6\",\n  \"#E6B333\",\n  \"#3366E6\",\n  \"#999966\",\n  \"#99FF99\",\n  \"#B34D4D\",\n  \"#80B300\",\n  \"#809900\",\n  \"#E6B3B3\",\n  \"#6680B3\",\n  \"#66991A\",\n  \"#FF99E6\",\n  \"#CCFF1A\",\n  \"#FF1A66\",\n  \"#E6331A\",\n  \"#33FFCC\",\n  \"#66994D\",\n  \"#B366CC\",\n  \"#4D8000\",\n  \"#B33300\",\n  \"#CC80CC\",\n  \"#66664D\",\n  \"#991AFF\",\n  \"#E666FF\",\n  \"#4DB3FF\",\n  \"#1AB399\",\n  \"#E666B3\",\n  \"#33991A\",\n  \"#CC9999\",\n  \"#B3B31A\",\n  \"#00E680\",\n  \"#4D8066\",\n  \"#809980\",\n  \"#E6FF80\",\n  \"#1AFF33\",\n  \"#999933\",\n  \"#FF3380\",\n  \"#CCCC00\",\n  \"#66E64D\",\n  \"#4D80CC\",\n  \"#9900B3\",\n  \"#E64D66\",\n  \"#4DB380\",\n  \"#FF4D4D\",\n  \"#99E6E6\",\n  \"#6666FF\",\n];\n\nexport default function PullRelease(props) {\n  const [\n    { x, y, x1, y1, x2, y2, x3, y3, op, color, move, background },\n    set,\n  ] = useSpring(() => ({\n    x: \"300px\",\n    y: \"300px\",\n    x1: \"300px\",\n    y1: \"300px\",\n    x2: \"300px\",\n    y2: \"300px\",\n    x3: \"300px\",\n    y3: \"300px\",\n    op: 0,\n    color: \"#3336DC\",\n    background: `radial-gradient(#3336DC, transparent)`,\n    move: `translateY(0px)`,\n  }));\n  const [pulled, setPulled] = React.useState(true);\n  const [number, setCount] = React.useState(myJson[0][\"instrumentalness\"]);\n  const [translated, setTranslate] = React.useState(10);\n  const [selIndex, setSelIndex] = React.useState(0);\n  const [songData, setSongData] = React.useState(null);\n  const [songIndex, setSongIndex] = React.useState(0);\n\n  React.useEffect(() => {\n    setSongData(myJson);\n  }, []);\n\n  // Set the drag hook and define component movement based on gesture data\n  const bind = useDrag(\n    ({ last, vxvy: [, vy], movement: [mx, my], cancel, canceled }) => {\n      console.log(my)\n      props.setScale(my)\n      if (my > 30) {\n        if (pulled) {\n          let scale = 500;\n          set({\n            x: `${scale}px`,\n            y: `${scale}px`,\n            x1: `${scale + 25}px`,\n            y1: `${scale + 25}px`,\n            x2: `${scale + 100}px`,\n            y2: `${scale + 100}px`,\n            x3: `${scale + 200}px`,\n            y3: `${scale + 200}px`,\n            op: 20,\n            move: `translateY(${translated}px)`,\n          });\n          if (translated === 40) {\n            setTranslate(0);\n          } else {\n            setTranslate(translated + 10);\n          }\n\n          setSelIndex((selIndex + 1) % songKeys.length);\n\n          getStats(setCount);\n          // updateWithRandomNumber(setCount);\n          setPulled(!pulled);\n        } else {\n          let scale = 300;\n          set({\n            x: `${scale}px`,\n            y: `${scale}px`,\n            x1: `${scale}px`,\n            y1: `${scale}px`,\n            x2: `${scale}px`,\n            y2: `${scale}px`,\n            x3: `${scale}px`,\n            y3: `${scale}px`,\n            op: 0,\n            move: `translateY(${translated}px)`,\n          });\n\n          setSelIndex((selIndex + 1) % songKeys.length);\n       \n          if (translated === 40) {\n            setTranslate(0);\n          } else {\n            setTranslate(translated + 10);\n          }\n          getStats(setCount);\n\n          // updateWithRandomNumber(setCount);\n          setPulled(!pulled);\n        }\n      }\n\n      if (mx > 50) {\n        let colCode = colorArray[songIndex].replace(/[\"']/g, \"\");\n\n        set({\n          color: colorArray[songIndex],\n          background: `radial-gradient(${colCode}, transparent)`,\n        });\n        setSongIndex((songIndex + 1) % songData.length);\n        props.setMainColor(colorArray[songIndex]);\n      }\n\n      /* if (pulled) {\n      set({ x:  '500px', y: '500px' })\n    \n      } else {\n     \n        set({ x:  '300px', y: '300px' })\n    \n      } */\n    }\n  );\n\n  function getStats(setCount) {\n\n    setCount(songData[songIndex][songKeys[selIndex]]);\n  }\n\n  function updateWithRandomNumber(setCount) {\n    const integerLength = initialNumber.toString().split(\".\")[0].length;\n    const min = 0;\n    const max = 20;\n\n    let num = Math.random() * max;\n    setCount(num.toFixed(3));\n  }\n\n  function pickItem() {\n    console.log(\"waa\");\n  }\n\n  // Bind it to a component\n  return (\n    <div className=\"middle-block\">\n      <div\n        style={{\n          display: \"flex\",\n          height: \"100%\",\n          width: \"100%\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          margin: \"20px\",\n          marginBottom: '50px'\n        }}\n      >\n     {/*    <div\n          className=\"middle-image\"\n          style={{\n            background: songData\n              ? `url(${songData[songIndex].image})`\n              : \"transparent\",\n            backgroundPosition: \"center\",\n            backgroundSize: \"contain\",\n            backgroundRepeat: \"no-repeat\",\n            width: \"100px\",\n            height: \"100px\",\n            filter: \"opacity(50%) grayscale(100%)\",\n            transform: 'translateY(-50px)'\n        \n          }}\n        ></div> */}\n      </div>\n      <div className=\"left-middle-block\">\n        <div className=\"tracking-info\">\n          <div style={{ alignItems: \"flex-end\" }} className=\"tracking-title\">\n            {songData ? songData[songIndex].title : \"No song\"}\n          </div>\n          <div style={{ fontSize: \"12px\" }} className=\"tracking-option\">\n            {songData ? songData[songIndex].music_label : \"No label\"}\n          </div>\n        </div>\n        <animated.div\n          {...bind()}\n          style={{\n            transform: move,\n          }}\n          className=\"middle-list\"\n        >\n          {songKeys.map((item, index) => (\n            <animated.div\n              {...bind()}\n              style={{\n                opacity: index === selIndex ? \"90%\" : \"45%\",\n                color: color,\n              }}\n              className=\"list-item\"\n              onClick={pickItem}\n            >\n              {item}\n            </animated.div>\n          ))}\n        </animated.div>\n\n        <div className=\"bottom-list\">\n          <div>\n            Released:{\" \"}\n            <span> {songData ? songData[songIndex].released : \"Null\"}</span>\n          </div>\n        </div>\n      </div>\n      <div className=\"radio-container\">\n        <animated.div\n          className=\"script-box\"\n          {...bind()}\n          style={{\n            width: y,\n            background: background,\n            height: x,\n            borderRadius: \"50%\",\n            filter: \"blur(30px) contrast(150%) brightness(1.5)\",\n            touchAction: \"none\",\n          }}\n        />\n        <animated.span\n          {...bind()}\n          style={{\n            display: \"inline-block\",\n            width: y1,\n            filter: \"contrast(150%) brightness(1.5) opacity(0.2)\",\n            height: x1,\n            borderRadius: \"50%\",\n            borderStyle: \"solid\",\n            borderWidth: \"1px\",\n            borderColor: color,\n            backgroundColor: \"rgba(0, 0, 0, 0)\",\n            position: \"absolute\",\n            opacity: op,\n            pointerEvents: \"none\",\n\n            touchAction: \"none\",\n          }}\n        ></animated.span>\n        <animated.span\n          {...bind()}\n          style={{\n            display: \"inline-block\",\n            width: y2,\n            filter: \"contrast(150%) brightness(1.5) opacity(0.2)\",\n            height: x2,\n            borderRadius: \"50%\",\n            borderStyle: \"solid\",\n            borderWidth: \"1px\",\n            borderColor: color,\n            backgroundColor: \"rgba(0, 0, 0, 0)\",\n            position: \"absolute\",\n            opacity: op,\n            pointerEvents: \"none\",\n\n            touchAction: \"none\",\n          }}\n        ></animated.span>\n        <animated.span\n          {...bind()}\n          style={{\n            display: \"inline-block\",\n            width: y3,\n            filter: \"contrast(150%) brightness(1.5) opacity(0.2)\",\n            height: x3,\n            borderRadius: \"50%\",\n            opacity: op,\n            borderStyle: \"solid\",\n            borderWidth: \"1px\",\n            borderColor: color,\n            backgroundColor: \"rgba(0, 0, 0, 0)\",\n            position: \"absolute\",\n\n            pointerEvents: \"none\",\n\n            touchAction: \"none\",\n          }}\n        ></animated.span>\n        <div className=\"radio-text\">\n          <Number setCount={setCount} number={number} />\n          <div className=\"radio-station\">{songKeys[selIndex]}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import * as THREE from \"three\";\nimport React, { Suspense, useState, useCallback } from \"react\";\nimport { Canvas, useFrame, useThree, useLoader } from \"react-three-fiber\";\nimport { Physics, usePlane, useSphere, useBox } from \"use-cannon\";\nimport clamp from \"lodash-es/clamp\";\nimport Post from \"./Post\";\n\nimport { useSprings, useSpring, animated, interpolate } from \"react-spring\";\nimport { useGesture, useDrag } from \"react-use-gesture\";\nimport Number from \"./Number\";\nimport Box from './Box'\nimport Blocks from './Blocks'\nimport PullRelease from './PullRelease'\n\n// A physical plane without visual representation\nfunction Plane({ color, ...props }) {\n    const [ref] = usePlane(() => ({ ...props }));\n    return (\n      <mesh ref={ref} receiveShadow>\n        <planeBufferGeometry attach=\"geometry\" args={[1000, 1000]} />\n        <meshPhongMaterial attach=\"material\" color={color} />\n      </mesh>\n    );\n  }\n  \n  \n  \n  \n  \n  \n  \n  \n  // Creates a crate that catches the spheres\n export default function Borders() {\n    const { viewport } = useThree();\n    return (\n      <>\n        <Plane\n          position={[0, -viewport.height / 2, 0]}\n          rotation={[-Math.PI / 2, 0, 0]}\n          color=\"#fff\"\n          receiveShadow\n        />\n        <Plane\n          position={[-viewport.width / 2 , 0, 0]}\n          rotation={[0, Math.PI / 2, 0]}\n          color=\"#fff\"\n          receiveShadow\n        />\n        <Plane\n          position={[viewport.width / 2 , 0, 0]}\n          rotation={[0, -Math.PI / 2, 0]}\n          color=\"#fff\"\n          receiveShadow\n        />\n        <Plane\n          position={[0, 0, 5]}\n          rotation={[0, 0, 0]}\n          color=\"#fff\"\n          receiveShadow\n        />\n        <Plane\n          position={[0, 0, 12]}\n          rotation={[0, -Math.PI, 0]}\n          color=\"#fff\"\n          receiveShadow\n        />\n      </>\n    );\n  }","\nimport * as THREE from \"three\";\nimport React, { Suspense, useState, useCallback } from \"react\";\nimport { Canvas, useFrame, useThree, useLoader } from \"react-three-fiber\";\nimport { Physics, usePlane, useSphere, useBox } from \"use-cannon\";\nimport crossUrl from './dot.png'\n\n// Spheres falling down\nexport default function InstancedSpheres({  color, count = 100 }) {\n    const { viewport } = useThree();\n    const map = useLoader(THREE.TextureLoader, '/carbon_normal.jpg')\n    /*const [state] = useState(() => ({\n      playing: [],\n      sounds: [...new Array(10)].map(() => new Audio(strikeUrl))\n    }))\n    const play = useCallback((index, velocity) => {\n      //console.log(state.playing, Math.max(...state.playing))\n      if (velocity > 2 && velocity > Math.max(...state.playing) / 2 && state.playing.length < 10) {\n        state.playing.push(velocity)\n        setTimeout(() => state.playing.splice(0, 1), 200)\n        state.playing.forEach((velocity, index) => {\n          state.sounds[index].volume = clamp(velocity / 10, 0, 1)\n          state.sounds[index].play()\n        })\n      }\n    }, [])*/\n  \n  \n  \n    const [ref] = useSphere((index) => ({\n      mass: 1,\n      position: [4 - Math.random() * 8, viewport.height, 0, 0],\n      args: 1,\n      //onCollide: e => play(index, e.contact.impactVelocity),\n    }));\n    return (\n      <instancedMesh\n        ref={ref}\n        castShadow\n        receiveShadow\n        args={[null, null, count]}\n      >\n        <sphereBufferGeometry args={[1, 32, 32]} />\n          <meshPhongMaterial\n        attach=\"material\"\n        color={color}\n       // vertexColors={THREE.VertexColors}\n        normalMap={map}\n        normalScale={[1, 1]}\n        normalMap-wrapS={THREE.RepeatWrapping}\n        normalMap-wrapT={THREE.RepeatWrapping}\n        normalMap-repeat={[10, 10]}\n      />\n      </instancedMesh>\n    );\n  }","import * as THREE from \"three\";\nimport React, { Suspense, useState, useCallback } from \"react\";\nimport { Canvas, useFrame, useThree, useLoader } from \"react-three-fiber\";\nimport { Physics, usePlane, useSphere, useBox } from \"use-cannon\";\nimport Post from \"./Post\";\nimport Box from './Box'\nimport Blocks from './Blocks'\nimport PullRelease from './PullRelease'\nimport Borders from './Borders'\nimport InstancedSpheres from './InstancedSpheres'\nimport {LogoGithubIcon, PlayIcon} from '@primer/octicons-react'\n\nimport './styles.css'\n\n\n\n\nfunction Layout() {\n  return (\n    \n    <PullRelease />\n  )\n}\n\n\n\nexport default function Scene(props) {\n  const [mouse,setMouse] = React.useState([1000,1000])\n  const onMouseMove = useCallback(\n    ({ clientX: x, clientY: y }) =>\n      (mouse.current = [x - window.innerWidth / 2, y - window.innerHeight / 2]),\n    []\n\n  );\n\n  const amplitudeValues = React.useRef(null);\n  const [ampValues, setAmpValues] = React.useState(null)\n  const [mainColor, setMainColor] = React.useState(\"#3336DC\")\n  const [scale, setScale] = React.useState(1)\n\n  function adjustFreqBandStyle(newAmplitudeData){\n    amplitudeValues.current = newAmplitudeData;\n  setAmpValues(newAmplitudeData)\n   // console.log(props.frequencyBandArray)\n   // console.log(amplitudeValues.current)\n  /*   let domElements = props.frequencyBandArray.map((num) =>\n      document.getElementById(num)) */\n\n  };\n\n  function runSpectrum(){\n    props.getFrequencyData(adjustFreqBandStyle)\n    requestAnimationFrame(runSpectrum)\n  }\n\n  function handleStartBottonClick(){\n\n    props.initializeAudioAnalyser()\n    requestAnimationFrame(runSpectrum)\n  }\n\n \n  return (\n    <>\n    <div className=\"navbar\">\n    <div style={{color: mainColor}} className=\"navbar-title\">Song Visualizer</div>\n    <button style={{background: 'none', border: 'none', color: mainColor, padding: '0px', margin: '0px'}} onClick={() => handleStartBottonClick()}>\n    <PlayIcon size='large' aria-label='GitHub'/>\n    \n    </button>\n    </div>\n    <div className=\"top-container\">\n\n\n      <PullRelease setMainColor={setMainColor} setScale = {setScale}/>\n      <div style = {{  filter: 'blur(1px) brightness(0.9) opacity(90%)', backgroundBlendMode: 'darken'\n }}  className=\"container\">\n        <Canvas\n         concurrent \n         shadowMap \n     \n          gl={{ alpha: false, antialias: false }}\n          camera={{ position: [0, 0, 20], fov: 50, near: 17, far: 40 }}\n        >\n          \n          {/*  <color attach=\"background\" args={[\"#fff\"]} /> */}\n          <ambientLight intensity={0.8} />\n          <directionalLight\n            position={[50, 50, 25]}\n            angle={0.3}\n            intensity={2}\n            castShadow\n            shadow-mapSize-width={100}\n            shadow-mapSize-height={100}\n            shadow-camera-left={-10}\n            shadow-camera-right={10}\n            shadow-camera-top={10}\n            shadow-camera-bottom={-10}\n          />\n          <directionalLight position={[-10, -10, -5]} intensity={0.5} />\n          <Suspense fallback={null}>\n            <Physics gravity={[0, -30, 0]}>\n           \n              <group position={[0, 0, -10]}>\n                <Box mouse={mouse} scale={scale} />\n                <Blocks amplitudeValues={ampValues}/>\n                <Borders />\n                <InstancedSpheres color={mainColor} />\n              </group>\n            </Physics>\n            <Post />\n          </Suspense>\n        </Canvas>\n      </div>\n    </div>\n    </>\n  );\n}\n","import React from 'react';\nimport VisualDemo from './VisualDemo';\nimport soundFile from '../audio/GummyBearz.mp3'\nimport Scene from './Scene'\n\nclass AudioDataContainer extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {}\n    this.frequencyBandArray = [...Array(25).keys()]\n  }\n\n  initializeAudioAnalyser = () => {\n    const audioFile = new Audio();\n    const audioContext = new AudioContext();\n    const source = audioContext.createMediaElementSource(audioFile);\n    const analyser = audioContext.createAnalyser();\n    audioFile.src = soundFile;\n    analyser.fftSize = 64\n    source.connect(audioContext.destination);\n    source.connect(analyser);\n    audioFile.play()\n      this.setState({\n        audioData: analyser\n      })\n  }\n\n  getFrequencyData = (styleAdjuster) => {\n    const bufferLength = this.state.audioData.frequencyBinCount;\n    const amplitudeArray = new Uint8Array(bufferLength);\n    this.state.audioData.getByteFrequencyData(amplitudeArray)\n    styleAdjuster(amplitudeArray)\n  }\n\n  render(){\n\n    return (\n      <>\n     \n\n        <Scene\n   initializeAudioAnalyser={this.initializeAudioAnalyser}\n          frequencyBandArray={this.frequencyBandArray}\n          getFrequencyData={this.getFrequencyData}\n          audioData={this.state.audioData}\n\n        />\n</>\n    );\n  }\n}\n\nexport default AudioDataContainer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport AudioDataContainer from './components/AudioDataContainer'\n\n\nexport default function App() {\n    return (\n        <>\n        <AudioDataContainer/>\n        </>\n    )\n}"],"sourceRoot":""}